services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - DATABASE_URL=postgresql+psycopg://postgres:password@SS_Database:5432/postgres
      - SECRET_KEY=0141bc81b542426afb1d83ba137c3b2f4ce24af700d82f4fdcd3a178ef59073c
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      SS_Database:
        condition: service_healthy
    networks:
      - app-network
  
  frontend:
    build: ./frontend

    ports:
      - "5173:5173"

    volumes:
      - ${PWD}/frontend:/app
      - /app/node_modules

    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

    depends_on:
      backend:
        condition: service_started
      SS_Database:
        condition: service_healthy

    networks:
      - app-network

  SS_Database:
    image: "postgres:latest"

    ports:
      - 5432:5432

    networks:
      - app-network

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

    volumes:
      - ${PWD}/ss_database/:/var/lib/postgresql/data/
      - ${PWD}/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
